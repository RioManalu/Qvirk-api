{
  "openapi": "3.1.1",
  "info": {
    "title": "Qvirk Restful API",
    "version": "1.0",
    "description": "OpenAPI for Qvirk Restful API",
    "contact": {
      "name": "Rio Hanson Manalu",
      "email": "riohansonmanalu16@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit"
    }
  },
  "servers": [
    {
      "description": "Qvirk Restful API Server",
      "url": "http://{environment}:7000/api",
      "variables": {
        "environment": {
          "description": "Server Environment",
          "default": "localhost",
          "enum": ["localhost", "dev", "qa", "prod"]
        }
      }
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create new user",
        "description": "create new user to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password", "fullname"],
                "properties": {
                  "username": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "password": {
                    "type": "string"
                  },
                  "fullname": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "rio": {
                  "description": "create user rio",
                  "value": {
                    "username": "rio",
                    "password": "passwordrio",
                    "fullname": "riohanson"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success create new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "addedUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "fullname": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "example success create new user",
                    "value": {
                      "status": "success",
                      "code": 201,
                      "message": "new user created",
                      "data": {
                        "addedUser": {
                          "id": "user-yCPoSvPagLcF44smuVIX4",
                          "username": "riohanson",
                          "fullname": "riofullname"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "usernameNotAvailable": {
                    "description": "example fail username is not available",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 400,
                        "message": "username is not available",
                        "stack": "InvariantError: username is not available\n    at UserRepositoryPostgres.verifyAvailableUsername (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\repository\\UserRepositoryPostgres.js:37:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AddUserUseCase.execute (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Applications\\use_case\\users\\AddUserUseCase.js:11:5)\n    at async UserController.postUser (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Interfaces\\http\\api\\users\\controller.js:9:25)"
                      }
                    }
                  },
                  "badPayload": {
                    "description": "example fail bad payload",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 400,
                        "message": "tidak dapat membuat user baru karena properti yang dibutuhkan tidak ada",
                        "stack": "InvariantError: tidak dapat membuat user baru karena properti yang dibutuhkan tidak ada\n    at Object.<anonymous> (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Commons\\Exeptions\\DomainErrorTranslator.js:10:48)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Object..js (node:internal/modules/cjs/loader:1689:10)\n    at Module.load (node:internal/modules/cjs/loader:1318:32)\n    at Function._load (node:internal/modules/cjs/loader:1128:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)\n    at Module.require (node:internal/modules/cjs/loader:1340:12)\n    at require (node:internal/modules/helpers:141:16)\n    at Object.<anonymous> (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\http\\shared\\errorHandler.js:2:31)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentications": {
      "post": {
        "tags": ["Authentications"],
        "summary": "login user",
        "description": "create new access and refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "rio": {
                  "description": "login user rio",
                  "value": {
                    "username": "riohanson",
                    "password": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "type": "object",
                          "properties": {
                            "accesToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "example login success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "login successful",
                      "data": {
                        "authentication": {
                          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InVzZXItOE9vcW9aMWNfbGpKZzlfMUZ2b3EtIiwidXNlcm5hbWUiOiJyaW9oYW5zb24iLCJpYXQiOjE3NTMxMDk2MTQsImV4cCI6MTc1MzEwOTYxN30.F86j61XSqYRscOjlPWUcO25MK2mnKuzZuxDX0AIy6x4",
                          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InVzZXItOE9vcW9aMWNfbGpKZzlfMUZ2b3EtIiwidXNlcm5hbWUiOiJyaW9oYW5zb24iLCJpYXQiOjE3NTMxMDk2MTR9.ziYtye_NdV9iwGQEoCl6Er9NunvsMMeVoNkOcUBRPLs"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "notFound": {
                    "description": "example fail username not found",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 400,
                        "message": "Username not found",
                        "stack": "InvariantError: Username not found\n    at UserRepositoryPostgres.getPasswordByUsername (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\repository\\UserRepositoryPostgres.js:49:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LoginUserUseCase.execute (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Applications\\use_case\\users\\LoginUserUseCase.js:19:31)\n    at async AuthenticationController.postAuthentication (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Interfaces\\http\\api\\authentications\\controller.js:14:30)"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "wrongPassword": {
                    "description": "example fail wrong password",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 401,
                        "message": "wrong password",
                        "stack": "AuthenticationError: wrong password\n    at BcryptPasswordHash.comparePassword (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\security\\BcryptPasswordHash.js:19:13)\n    at async LoginUserUseCase.execute (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Applications\\use_case\\users\\LoginUserUseCase.js:20:5)\n    at async AuthenticationController.postAuthentication (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Interfaces\\http\\api\\authentications\\controller.js:14:30)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Authentications"],
        "summary": "update existing access token",
        "description": "update existing access token using refreshToken in database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success update access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "example update accessToken success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "new accessToken created",
                      "data": {
                        "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InVzZXItOE9vcW9aMWNfbGpKZzlfMUZ2b3EtIiwidXNlcm5hbWUiOiJyaW9oYW5zb24iLCJpYXQiOjE3NTMxMDk2MTQsImV4cCI6MTc1MzEwOTYxN30.F86j61XSqYRscOjlPWUcO25MK2mnKuzZuxDX0AIy6x4"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "invalidRefreshToken": {
                    "description": "example fail invalid refresh token",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 400,
                        "message": "invalid refresh token",
                        "stack": "InvariantError: invalid refresh token\n    at JwtTokenManager.verifyRefreshToken (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\security\\JwtTokenManager.js:26:13)\n    at RefreshAuthenticationUseCase.execute (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Applications\\use_case\\authentications\\RefreshAuthenticationUseCase.js:13:44)\n    at AuthenticationController.putAuthentication (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Interfaces\\http\\api\\authentications\\controller.js:30:68)\n    at Layer.handle [as handle_request] (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:280:10)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Authentications"],
        "summary": "logout user",
        "description": "delete existing refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "success logout user",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "notFound": {
                    "description": "example fail token not found",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 400,
                        "message": "token not found in database",
                        "stack": "InvariantError: token not found in database\n    at AuthenticationRepositoryPostgres.checkAvailabilityToken (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\repository\\AuthenticationRepositoryPostgres.js:27:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LogoutUserUseCase.execute (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Applications\\use_case\\users\\LogoutUserUseCase.js:9:5)\n    at async AuthenticationController.deleteAuthentication (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Interfaces\\http\\api\\authentications\\controller.js:46:7)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": ["Projects"],
        "summary": "create new project",
        "description": "create new project to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "description"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success create new project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "addedProject": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_by": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "example success create new project",
                    "value": {
                      "status": "success",
                      "code": 201,
                      "message": "new project created",
                      "data": {
                        "addedProject": {
                          "id": "project-D_ZKU5QJs0mrdKNsgRJk-",
                          "name": "project-A",
                          "created_by": "user-c5RCAGtHb7ZsH7gE9rXxT"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "badPayload": {
                    "description": "example fail bad request",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 400,
                        "message": "tidak dapat membuat project baru karena properti yang dibutuhkan tidak ada",
                        "stack": "InvariantError: tidak dapat membuat project baru karena properti yang dibutuhkan tidak ada\n    at Object.<anonymous> (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Commons\\Exeptions\\DomainErrorTranslator.js:18:42)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Object..js (node:internal/modules/cjs/loader:1689:10)\n    at Module.load (node:internal/modules/cjs/loader:1318:32)\n    at Function._load (node:internal/modules/cjs/loader:1128:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)\n    at Module.require (node:internal/modules/cjs/loader:1340:12)\n    at require (node:internal/modules/helpers:141:16)\n    at Object.<anonymous> (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\http\\shared\\errorHandler.js:2:31)"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                },
                "examples": {
                  "accessDenied": {
                    "description": "example fail access denied",
                    "value": {
                      "error": {
                        "status": "fail",
                        "code": 401,
                        "message": "Access denied. No token provided.",
                        "stack": "AuthenticationError: Access denied. No token provided.\n    at getBearerToken (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\src\\Infrastructures\\http\\shared\\authMiddleware.js:9:19)\n    at Layer.handle [as handle_request] (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:175:3)\n    at router (C:\\web\\Project\\Self-Project\\02\\Qvirk\\Qvirk-api\\node_modules\\express\\lib\\router\\index.js:47:12)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "error400": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "stack": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
